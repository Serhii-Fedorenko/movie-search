{"version":3,"file":"static/js/442.beba0c76.chunk.js","mappings":"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","sources":["Components/Movies.styled.js","Components/SearchForm.jsx","Components/MovieContainer.jsx","Pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const MovieBox = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const MovieCard = styled.li`\r\n  margin-right: 5px;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  width: 200px;\r\n  margin: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const MovieTitle = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  max-width: 100%;\r\n  width: 180px;\r\n`;\r\n\r\nexport const CustomLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  & > img {\r\n    display: block;\r\n    width: 200px;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport const ButtonBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 40px;\r\n`;\r\n\r\nexport const Button = styled(NavLink)`\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: #232323;\r\n  font-weight: 500;\r\n  border-radius: 4px;\r\n  border: black solid 1px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const CustomForm = styled.form`\r\n  display: flex;\r\n\r\n  & > input {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import { BsSearch } from \"react-icons/bs\";\r\nimport { CustomForm, Button } from \"./Movies.styled\";\r\n\r\nconst SearchForm = ({ query, updateQueryString, handleFormSubmit }) => {\r\n  return (\r\n    <CustomForm onSubmit={handleFormSubmit}>\r\n      <input type=\"text\" value={query} onChange={updateQueryString} />\r\n      <Button type=\"submit\">\r\n        <BsSearch />\r\n      </Button>\r\n    </CustomForm>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import { CustomLink, MovieBox, MovieCard, MovieTitle } from \"./Movies.styled\";\r\n\r\nconst MovieContainer = ({ sortedMovies, location, collection }) => {\r\n\r\n  return (\r\n    <MovieBox>\r\n      {sortedMovies(collection)?.map((movie) => (\r\n        <MovieCard key={movie.id}>\r\n          <CustomLink to={`${movie.id}`} state={{ from: location }}>\r\n            <MovieTitle>{movie.title}</MovieTitle>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n              alt={movie.title}\r\n              width=\"300\"\r\n            />\r\n          </CustomLink>\r\n        </MovieCard>\r\n      ))}\r\n    </MovieBox>\r\n  );\r\n};\r\n\r\nexport default MovieContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSearchParams, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SearchForm from \"../Components/SearchForm\";\r\nimport MovieContainer from \"../Components/MovieContainer\";\r\n\r\nconst Movies = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [collection, setCollection] = useState([]);\r\n  const query = searchParams.get(\"query\") ?? \"\";\r\n  const location = useLocation();\r\n\r\n  const updateQueryString = (e) => {\r\n    setSearchParams(e.target.value !== \"\" ? { query: e.target.value } : {});\r\n  };\r\n\r\n  const fetchMovies = (query) => {\r\n    axios\r\n      .get(\r\n        `/search/movie?query=${query}&include_adult=false&language=en-US&page=1&sort_by=popularity.desc`\r\n      )\r\n      .then(({ data }) => setCollection(data.results))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchParams({ query });\r\n    fetchMovies(query);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      fetchMovies(query);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const sortedMovies = (collection) => {\r\n    return collection.sort((a, b) => b.popularity - a.popularity);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchForm\r\n        query={query}\r\n        updateQueryString={updateQueryString}\r\n        handleFormSubmit={handleFormSubmit}\r\n      />\r\n      <MovieContainer\r\n        sortedMovies={sortedMovies}\r\n        location={location}\r\n        collection={collection}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["MovieBox","styled","ul","_templateObject","_taggedTemplateLiteral","MovieCard","li","_templateObject2","MovieTitle","h3","_templateObject3","CustomLink","NavLink","_templateObject4","ButtonBox","div","_templateObject5","Button","_templateObject6","CustomForm","form","_templateObject7","_ref","query","updateQueryString","handleFormSubmit","_jsxs","onSubmit","children","_jsx","type","value","onChange","BsSearch","_sortedMovies","sortedMovies","location","collection","map","movie","to","concat","id","state","from","title","src","poster_path","alt","width","Movies","_searchParams$get","searchParams","setSearchParams","useSearchParams","setCollection","useState","get","useLocation","fetchMovies","axios","then","data","results","catch","error","console","log","useEffect","_Fragment","SearchForm","e","target","preventDefault","MovieContainer","sort","a","b","popularity"],"sourceRoot":""}